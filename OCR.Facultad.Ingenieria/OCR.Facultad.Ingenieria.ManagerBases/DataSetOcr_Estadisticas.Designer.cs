//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.4971
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace OCR.Facultad.Ingenieria.ManagerBases {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetOcr_Estadisticas")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetOcr_Estadisticas : global::System.Data.DataSet {
        
        private ocr_estadisticasDataTable tableocr_estadisticas;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetOcr_Estadisticas() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetOcr_Estadisticas(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ocr_estadisticas"] != null)) {
                    base.Tables.Add(new ocr_estadisticasDataTable(ds.Tables["ocr_estadisticas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ocr_estadisticasDataTable ocr_estadisticas {
            get {
                return this.tableocr_estadisticas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetOcr_Estadisticas cln = ((DataSetOcr_Estadisticas)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ocr_estadisticas"] != null)) {
                    base.Tables.Add(new ocr_estadisticasDataTable(ds.Tables["ocr_estadisticas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableocr_estadisticas = ((ocr_estadisticasDataTable)(base.Tables["ocr_estadisticas"]));
            if ((initTable == true)) {
                if ((this.tableocr_estadisticas != null)) {
                    this.tableocr_estadisticas.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetOcr_Estadisticas";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetOcr_Estadisticas.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableocr_estadisticas = new ocr_estadisticasDataTable();
            base.Tables.Add(this.tableocr_estadisticas);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeocr_estadisticas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetOcr_Estadisticas ds = new DataSetOcr_Estadisticas();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ocr_estadisticasRowChangeEventHandler(object sender, ocr_estadisticasRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ocr_estadisticasDataTable : global::System.Data.TypedTableBase<ocr_estadisticasRow> {
            
            private global::System.Data.DataColumn columnocr_est_id;
            
            private global::System.Data.DataColumn columnocr_est_nume_radi;
            
            private global::System.Data.DataColumn columnocr_est_batch_ocr;
            
            private global::System.Data.DataColumn columnocr_est_memoriatotal;
            
            private global::System.Data.DataColumn columnocr_est_memoriacache;
            
            private global::System.Data.DataColumn columnocr_est_memoriadisponible;
            
            private global::System.Data.DataColumn columnocr_est_memorialibre;
            
            private global::System.Data.DataColumn columnocr_est_memkernelpaginado;
            
            private global::System.Data.DataColumn columnocr_est_memkernelnopaginado;
            
            private global::System.Data.DataColumn columnocr_est_identificadores;
            
            private global::System.Data.DataColumn columnocr_est_subprocesos;
            
            private global::System.Data.DataColumn columnocr_est_porcentajeusocpu;
            
            private global::System.Data.DataColumn columnocr_est_promediolecuradisco;
            
            private global::System.Data.DataColumn columnocr_est_promedioescrituradisco;
            
            private global::System.Data.DataColumn columnocr_est_fechaprosesamiento;
            
            private global::System.Data.DataColumn columnocr_est_horaprocesamiento;
            
            private global::System.Data.DataColumn columnocr_est_espacioendisco;
            
            private global::System.Data.DataColumn columnocr_est_tamaniodisco;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ocr_estadisticasDataTable() {
                this.TableName = "ocr_estadisticas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ocr_estadisticasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ocr_estadisticasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_idColumn {
                get {
                    return this.columnocr_est_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_nume_radiColumn {
                get {
                    return this.columnocr_est_nume_radi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_batch_ocrColumn {
                get {
                    return this.columnocr_est_batch_ocr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_memoriatotalColumn {
                get {
                    return this.columnocr_est_memoriatotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_memoriacacheColumn {
                get {
                    return this.columnocr_est_memoriacache;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_memoriadisponibleColumn {
                get {
                    return this.columnocr_est_memoriadisponible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_memorialibreColumn {
                get {
                    return this.columnocr_est_memorialibre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_memkernelpaginadoColumn {
                get {
                    return this.columnocr_est_memkernelpaginado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_memkernelnopaginadoColumn {
                get {
                    return this.columnocr_est_memkernelnopaginado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_identificadoresColumn {
                get {
                    return this.columnocr_est_identificadores;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_subprocesosColumn {
                get {
                    return this.columnocr_est_subprocesos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_porcentajeusocpuColumn {
                get {
                    return this.columnocr_est_porcentajeusocpu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_promediolecuradiscoColumn {
                get {
                    return this.columnocr_est_promediolecuradisco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_promedioescrituradiscoColumn {
                get {
                    return this.columnocr_est_promedioescrituradisco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_fechaprosesamientoColumn {
                get {
                    return this.columnocr_est_fechaprosesamiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_horaprocesamientoColumn {
                get {
                    return this.columnocr_est_horaprocesamiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_espacioendiscoColumn {
                get {
                    return this.columnocr_est_espacioendisco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ocr_est_tamaniodiscoColumn {
                get {
                    return this.columnocr_est_tamaniodisco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ocr_estadisticasRow this[int index] {
                get {
                    return ((ocr_estadisticasRow)(this.Rows[index]));
                }
            }
            
            public event ocr_estadisticasRowChangeEventHandler ocr_estadisticasRowChanging;
            
            public event ocr_estadisticasRowChangeEventHandler ocr_estadisticasRowChanged;
            
            public event ocr_estadisticasRowChangeEventHandler ocr_estadisticasRowDeleting;
            
            public event ocr_estadisticasRowChangeEventHandler ocr_estadisticasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addocr_estadisticasRow(ocr_estadisticasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ocr_estadisticasRow Addocr_estadisticasRow(
                        int ocr_est_nume_radi, 
                        int ocr_est_batch_ocr, 
                        float ocr_est_memoriatotal, 
                        float ocr_est_memoriacache, 
                        float ocr_est_memoriadisponible, 
                        float ocr_est_memorialibre, 
                        float ocr_est_memkernelpaginado, 
                        float ocr_est_memkernelnopaginado, 
                        float ocr_est_identificadores, 
                        float ocr_est_subprocesos, 
                        float ocr_est_porcentajeusocpu, 
                        float ocr_est_promediolecuradisco, 
                        float ocr_est_promedioescrituradisco, 
                        System.DateTime ocr_est_fechaprosesamiento, 
                        System.TimeSpan ocr_est_horaprocesamiento, 
                        float ocr_est_espacioendisco, 
                        float ocr_est_tamaniodisco) {
                ocr_estadisticasRow rowocr_estadisticasRow = ((ocr_estadisticasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ocr_est_nume_radi,
                        ocr_est_batch_ocr,
                        ocr_est_memoriatotal,
                        ocr_est_memoriacache,
                        ocr_est_memoriadisponible,
                        ocr_est_memorialibre,
                        ocr_est_memkernelpaginado,
                        ocr_est_memkernelnopaginado,
                        ocr_est_identificadores,
                        ocr_est_subprocesos,
                        ocr_est_porcentajeusocpu,
                        ocr_est_promediolecuradisco,
                        ocr_est_promedioescrituradisco,
                        ocr_est_fechaprosesamiento,
                        ocr_est_horaprocesamiento,
                        ocr_est_espacioendisco,
                        ocr_est_tamaniodisco};
                rowocr_estadisticasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowocr_estadisticasRow);
                return rowocr_estadisticasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ocr_estadisticasRow FindByocr_est_id(int ocr_est_id) {
                return ((ocr_estadisticasRow)(this.Rows.Find(new object[] {
                            ocr_est_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ocr_estadisticasDataTable cln = ((ocr_estadisticasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ocr_estadisticasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnocr_est_id = base.Columns["ocr_est_id"];
                this.columnocr_est_nume_radi = base.Columns["ocr_est_nume_radi"];
                this.columnocr_est_batch_ocr = base.Columns["ocr_est_batch_ocr"];
                this.columnocr_est_memoriatotal = base.Columns["ocr_est_memoriatotal"];
                this.columnocr_est_memoriacache = base.Columns["ocr_est_memoriacache"];
                this.columnocr_est_memoriadisponible = base.Columns["ocr_est_memoriadisponible"];
                this.columnocr_est_memorialibre = base.Columns["ocr_est_memorialibre"];
                this.columnocr_est_memkernelpaginado = base.Columns["ocr_est_memkernelpaginado"];
                this.columnocr_est_memkernelnopaginado = base.Columns["ocr_est_memkernelnopaginado"];
                this.columnocr_est_identificadores = base.Columns["ocr_est_identificadores"];
                this.columnocr_est_subprocesos = base.Columns["ocr_est_subprocesos"];
                this.columnocr_est_porcentajeusocpu = base.Columns["ocr_est_porcentajeusocpu"];
                this.columnocr_est_promediolecuradisco = base.Columns["ocr_est_promediolecuradisco"];
                this.columnocr_est_promedioescrituradisco = base.Columns["ocr_est_promedioescrituradisco"];
                this.columnocr_est_fechaprosesamiento = base.Columns["ocr_est_fechaprosesamiento"];
                this.columnocr_est_horaprocesamiento = base.Columns["ocr_est_horaprocesamiento"];
                this.columnocr_est_espacioendisco = base.Columns["ocr_est_espacioendisco"];
                this.columnocr_est_tamaniodisco = base.Columns["ocr_est_tamaniodisco"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnocr_est_id = new global::System.Data.DataColumn("ocr_est_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_id);
                this.columnocr_est_nume_radi = new global::System.Data.DataColumn("ocr_est_nume_radi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_nume_radi);
                this.columnocr_est_batch_ocr = new global::System.Data.DataColumn("ocr_est_batch_ocr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_batch_ocr);
                this.columnocr_est_memoriatotal = new global::System.Data.DataColumn("ocr_est_memoriatotal", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_memoriatotal);
                this.columnocr_est_memoriacache = new global::System.Data.DataColumn("ocr_est_memoriacache", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_memoriacache);
                this.columnocr_est_memoriadisponible = new global::System.Data.DataColumn("ocr_est_memoriadisponible", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_memoriadisponible);
                this.columnocr_est_memorialibre = new global::System.Data.DataColumn("ocr_est_memorialibre", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_memorialibre);
                this.columnocr_est_memkernelpaginado = new global::System.Data.DataColumn("ocr_est_memkernelpaginado", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_memkernelpaginado);
                this.columnocr_est_memkernelnopaginado = new global::System.Data.DataColumn("ocr_est_memkernelnopaginado", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_memkernelnopaginado);
                this.columnocr_est_identificadores = new global::System.Data.DataColumn("ocr_est_identificadores", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_identificadores);
                this.columnocr_est_subprocesos = new global::System.Data.DataColumn("ocr_est_subprocesos", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_subprocesos);
                this.columnocr_est_porcentajeusocpu = new global::System.Data.DataColumn("ocr_est_porcentajeusocpu", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_porcentajeusocpu);
                this.columnocr_est_promediolecuradisco = new global::System.Data.DataColumn("ocr_est_promediolecuradisco", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_promediolecuradisco);
                this.columnocr_est_promedioescrituradisco = new global::System.Data.DataColumn("ocr_est_promedioescrituradisco", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_promedioescrituradisco);
                this.columnocr_est_fechaprosesamiento = new global::System.Data.DataColumn("ocr_est_fechaprosesamiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_fechaprosesamiento);
                this.columnocr_est_horaprocesamiento = new global::System.Data.DataColumn("ocr_est_horaprocesamiento", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_horaprocesamiento);
                this.columnocr_est_espacioendisco = new global::System.Data.DataColumn("ocr_est_espacioendisco", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_espacioendisco);
                this.columnocr_est_tamaniodisco = new global::System.Data.DataColumn("ocr_est_tamaniodisco", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnocr_est_tamaniodisco);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnocr_est_id}, true));
                this.columnocr_est_id.AutoIncrement = true;
                this.columnocr_est_id.AutoIncrementSeed = -1;
                this.columnocr_est_id.AutoIncrementStep = -1;
                this.columnocr_est_id.AllowDBNull = false;
                this.columnocr_est_id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ocr_estadisticasRow Newocr_estadisticasRow() {
                return ((ocr_estadisticasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ocr_estadisticasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ocr_estadisticasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ocr_estadisticasRowChanged != null)) {
                    this.ocr_estadisticasRowChanged(this, new ocr_estadisticasRowChangeEvent(((ocr_estadisticasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ocr_estadisticasRowChanging != null)) {
                    this.ocr_estadisticasRowChanging(this, new ocr_estadisticasRowChangeEvent(((ocr_estadisticasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ocr_estadisticasRowDeleted != null)) {
                    this.ocr_estadisticasRowDeleted(this, new ocr_estadisticasRowChangeEvent(((ocr_estadisticasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ocr_estadisticasRowDeleting != null)) {
                    this.ocr_estadisticasRowDeleting(this, new ocr_estadisticasRowChangeEvent(((ocr_estadisticasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeocr_estadisticasRow(ocr_estadisticasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetOcr_Estadisticas ds = new DataSetOcr_Estadisticas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ocr_estadisticasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ocr_estadisticasRow : global::System.Data.DataRow {
            
            private ocr_estadisticasDataTable tableocr_estadisticas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ocr_estadisticasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableocr_estadisticas = ((ocr_estadisticasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ocr_est_id {
                get {
                    return ((int)(this[this.tableocr_estadisticas.ocr_est_idColumn]));
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ocr_est_nume_radi {
                get {
                    try {
                        return ((int)(this[this.tableocr_estadisticas.ocr_est_nume_radiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_nume_radi\' de la tabla \'ocr_estadisticas\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_nume_radiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ocr_est_batch_ocr {
                get {
                    try {
                        return ((int)(this[this.tableocr_estadisticas.ocr_est_batch_ocrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_batch_ocr\' de la tabla \'ocr_estadisticas\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_batch_ocrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_memoriatotal {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_memoriatotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_memoriatotal\' de la tabla \'ocr_estadisticas\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_memoriatotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_memoriacache {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_memoriacacheColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_memoriacache\' de la tabla \'ocr_estadisticas\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_memoriacacheColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_memoriadisponible {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_memoriadisponibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_memoriadisponible\' de la tabla \'ocr_estadisticas\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_memoriadisponibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_memorialibre {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_memorialibreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_memorialibre\' de la tabla \'ocr_estadisticas\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_memorialibreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_memkernelpaginado {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_memkernelpaginadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_memkernelpaginado\' de la tabla \'ocr_estadisticas\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_memkernelpaginadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_memkernelnopaginado {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_memkernelnopaginadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_memkernelnopaginado\' de la tabla \'ocr_estadistica" +
                                "s\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_memkernelnopaginadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_identificadores {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_identificadoresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_identificadores\' de la tabla \'ocr_estadisticas\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_identificadoresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_subprocesos {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_subprocesosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_subprocesos\' de la tabla \'ocr_estadisticas\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_subprocesosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_porcentajeusocpu {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_porcentajeusocpuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_porcentajeusocpu\' de la tabla \'ocr_estadisticas\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_porcentajeusocpuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_promediolecuradisco {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_promediolecuradiscoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_promediolecuradisco\' de la tabla \'ocr_estadistica" +
                                "s\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_promediolecuradiscoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_promedioescrituradisco {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_promedioescrituradiscoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_promedioescrituradisco\' de la tabla \'ocr_estadist" +
                                "icas\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_promedioescrituradiscoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ocr_est_fechaprosesamiento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableocr_estadisticas.ocr_est_fechaprosesamientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_fechaprosesamiento\' de la tabla \'ocr_estadisticas" +
                                "\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_fechaprosesamientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.TimeSpan ocr_est_horaprocesamiento {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableocr_estadisticas.ocr_est_horaprocesamientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_horaprocesamiento\' de la tabla \'ocr_estadisticas\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_horaprocesamientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_espacioendisco {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_espacioendiscoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_espacioendisco\' de la tabla \'ocr_estadisticas\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_espacioendiscoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ocr_est_tamaniodisco {
                get {
                    try {
                        return ((float)(this[this.tableocr_estadisticas.ocr_est_tamaniodiscoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ocr_est_tamaniodisco\' de la tabla \'ocr_estadisticas\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableocr_estadisticas.ocr_est_tamaniodiscoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_nume_radiNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_nume_radiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_nume_radiNull() {
                this[this.tableocr_estadisticas.ocr_est_nume_radiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_batch_ocrNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_batch_ocrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_batch_ocrNull() {
                this[this.tableocr_estadisticas.ocr_est_batch_ocrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_memoriatotalNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_memoriatotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_memoriatotalNull() {
                this[this.tableocr_estadisticas.ocr_est_memoriatotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_memoriacacheNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_memoriacacheColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_memoriacacheNull() {
                this[this.tableocr_estadisticas.ocr_est_memoriacacheColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_memoriadisponibleNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_memoriadisponibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_memoriadisponibleNull() {
                this[this.tableocr_estadisticas.ocr_est_memoriadisponibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_memorialibreNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_memorialibreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_memorialibreNull() {
                this[this.tableocr_estadisticas.ocr_est_memorialibreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_memkernelpaginadoNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_memkernelpaginadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_memkernelpaginadoNull() {
                this[this.tableocr_estadisticas.ocr_est_memkernelpaginadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_memkernelnopaginadoNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_memkernelnopaginadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_memkernelnopaginadoNull() {
                this[this.tableocr_estadisticas.ocr_est_memkernelnopaginadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_identificadoresNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_identificadoresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_identificadoresNull() {
                this[this.tableocr_estadisticas.ocr_est_identificadoresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_subprocesosNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_subprocesosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_subprocesosNull() {
                this[this.tableocr_estadisticas.ocr_est_subprocesosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_porcentajeusocpuNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_porcentajeusocpuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_porcentajeusocpuNull() {
                this[this.tableocr_estadisticas.ocr_est_porcentajeusocpuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_promediolecuradiscoNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_promediolecuradiscoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_promediolecuradiscoNull() {
                this[this.tableocr_estadisticas.ocr_est_promediolecuradiscoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_promedioescrituradiscoNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_promedioescrituradiscoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_promedioescrituradiscoNull() {
                this[this.tableocr_estadisticas.ocr_est_promedioescrituradiscoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_fechaprosesamientoNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_fechaprosesamientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_fechaprosesamientoNull() {
                this[this.tableocr_estadisticas.ocr_est_fechaprosesamientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_horaprocesamientoNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_horaprocesamientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_horaprocesamientoNull() {
                this[this.tableocr_estadisticas.ocr_est_horaprocesamientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_espacioendiscoNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_espacioendiscoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_espacioendiscoNull() {
                this[this.tableocr_estadisticas.ocr_est_espacioendiscoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isocr_est_tamaniodiscoNull() {
                return this.IsNull(this.tableocr_estadisticas.ocr_est_tamaniodiscoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setocr_est_tamaniodiscoNull() {
                this[this.tableocr_estadisticas.ocr_est_tamaniodiscoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ocr_estadisticasRowChangeEvent : global::System.EventArgs {
            
            private ocr_estadisticasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ocr_estadisticasRowChangeEvent(ocr_estadisticasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ocr_estadisticasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace OCR.Facultad.Ingenieria.ManagerBases.DataSetOcr_EstadisticasTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ocr_estadisticasTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ocr_estadisticasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ocr_estadisticas";
            tableMapping.ColumnMappings.Add("ocr_est_id", "ocr_est_id");
            tableMapping.ColumnMappings.Add("ocr_est_nume_radi", "ocr_est_nume_radi");
            tableMapping.ColumnMappings.Add("ocr_est_batch_ocr", "ocr_est_batch_ocr");
            tableMapping.ColumnMappings.Add("ocr_est_memoriatotal", "ocr_est_memoriatotal");
            tableMapping.ColumnMappings.Add("ocr_est_memoriacache", "ocr_est_memoriacache");
            tableMapping.ColumnMappings.Add("ocr_est_memoriadisponible", "ocr_est_memoriadisponible");
            tableMapping.ColumnMappings.Add("ocr_est_memorialibre", "ocr_est_memorialibre");
            tableMapping.ColumnMappings.Add("ocr_est_memkernelpaginado", "ocr_est_memkernelpaginado");
            tableMapping.ColumnMappings.Add("ocr_est_memkernelnopaginado", "ocr_est_memkernelnopaginado");
            tableMapping.ColumnMappings.Add("ocr_est_identificadores", "ocr_est_identificadores");
            tableMapping.ColumnMappings.Add("ocr_est_subprocesos", "ocr_est_subprocesos");
            tableMapping.ColumnMappings.Add("ocr_est_porcentajeusocpu", "ocr_est_porcentajeusocpu");
            tableMapping.ColumnMappings.Add("ocr_est_promediolecuradisco", "ocr_est_promediolecuradisco");
            tableMapping.ColumnMappings.Add("ocr_est_promedioescrituradisco", "ocr_est_promedioescrituradisco");
            tableMapping.ColumnMappings.Add("ocr_est_fechaprosesamiento", "ocr_est_fechaprosesamiento");
            tableMapping.ColumnMappings.Add("ocr_est_horaprocesamiento", "ocr_est_horaprocesamiento");
            tableMapping.ColumnMappings.Add("ocr_est_espacioendisco", "ocr_est_espacioendisco");
            tableMapping.ColumnMappings.Add("ocr_est_tamaniodisco", "ocr_est_tamaniodisco");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `ocr_estadisticas` WHERE ((`ocr_est_id` = @Original_ocr_est_id) AND (" +
                "(@IsNull_ocr_est_nume_radi = 1 AND `ocr_est_nume_radi` IS NULL) OR (`ocr_est_num" +
                "e_radi` = @Original_ocr_est_nume_radi)) AND ((@IsNull_ocr_est_batch_ocr = 1 AND " +
                "`ocr_est_batch_ocr` IS NULL) OR (`ocr_est_batch_ocr` = @Original_ocr_est_batch_o" +
                "cr)) AND ((@IsNull_ocr_est_memoriatotal = 1 AND `ocr_est_memoriatotal` IS NULL) " +
                "OR (`ocr_est_memoriatotal` = @Original_ocr_est_memoriatotal)) AND ((@IsNull_ocr_" +
                "est_memoriacache = 1 AND `ocr_est_memoriacache` IS NULL) OR (`ocr_est_memoriacac" +
                "he` = @Original_ocr_est_memoriacache)) AND ((@IsNull_ocr_est_memoriadisponible =" +
                " 1 AND `ocr_est_memoriadisponible` IS NULL) OR (`ocr_est_memoriadisponible` = @O" +
                "riginal_ocr_est_memoriadisponible)) AND ((@IsNull_ocr_est_memorialibre = 1 AND `" +
                "ocr_est_memorialibre` IS NULL) OR (`ocr_est_memorialibre` = @Original_ocr_est_me" +
                "morialibre)) AND ((@IsNull_ocr_est_memkernelpaginado = 1 AND `ocr_est_memkernelp" +
                "aginado` IS NULL) OR (`ocr_est_memkernelpaginado` = @Original_ocr_est_memkernelp" +
                "aginado)) AND ((@IsNull_ocr_est_memkernelnopaginado = 1 AND `ocr_est_memkernelno" +
                "paginado` IS NULL) OR (`ocr_est_memkernelnopaginado` = @Original_ocr_est_memkern" +
                "elnopaginado)) AND ((@IsNull_ocr_est_identificadores = 1 AND `ocr_est_identifica" +
                "dores` IS NULL) OR (`ocr_est_identificadores` = @Original_ocr_est_identificadore" +
                "s)) AND ((@IsNull_ocr_est_subprocesos = 1 AND `ocr_est_subprocesos` IS NULL) OR " +
                "(`ocr_est_subprocesos` = @Original_ocr_est_subprocesos)) AND ((@IsNull_ocr_est_p" +
                "orcentajeusocpu = 1 AND `ocr_est_porcentajeusocpu` IS NULL) OR (`ocr_est_porcent" +
                "ajeusocpu` = @Original_ocr_est_porcentajeusocpu)) AND ((@IsNull_ocr_est_promedio" +
                "lecuradisco = 1 AND `ocr_est_promediolecuradisco` IS NULL) OR (`ocr_est_promedio" +
                "lecuradisco` = @Original_ocr_est_promediolecuradisco)) AND ((@IsNull_ocr_est_pro" +
                "medioescrituradisco = 1 AND `ocr_est_promedioescrituradisco` IS NULL) OR (`ocr_e" +
                "st_promedioescrituradisco` = @Original_ocr_est_promedioescrituradisco)) AND ((@I" +
                "sNull_ocr_est_fechaprosesamiento = 1 AND `ocr_est_fechaprosesamiento` IS NULL) O" +
                "R (`ocr_est_fechaprosesamiento` = @Original_ocr_est_fechaprosesamiento)) AND ((@" +
                "IsNull_ocr_est_horaprocesamiento = 1 AND `ocr_est_horaprocesamiento` IS NULL) OR" +
                " (`ocr_est_horaprocesamiento` = @Original_ocr_est_horaprocesamiento)) AND ((@IsN" +
                "ull_ocr_est_espacioendisco = 1 AND `ocr_est_espacioendisco` IS NULL) OR (`ocr_es" +
                "t_espacioendisco` = @Original_ocr_est_espacioendisco)) AND ((@IsNull_ocr_est_tam" +
                "aniodisco = 1 AND `ocr_est_tamaniodisco` IS NULL) OR (`ocr_est_tamaniodisco` = @" +
                "Original_ocr_est_tamaniodisco)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_nume_radi";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_nume_radi";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_nume_radi";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_nume_radi";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_batch_ocr";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_batch_ocr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_batch_ocr";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_batch_ocr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memoriatotal";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriatotal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memoriatotal";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriatotal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memoriacache";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriacache";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memoriacache";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriacache";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memoriadisponible";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriadisponible";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memoriadisponible";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriadisponible";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memorialibre";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memorialibre";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memorialibre";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memorialibre";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memkernelpaginado";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelpaginado";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memkernelpaginado";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelpaginado";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memkernelnopaginado";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelnopaginado";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memkernelnopaginado";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelnopaginado";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_identificadores";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_identificadores";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_identificadores";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_identificadores";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_subprocesos";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_subprocesos";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_subprocesos";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_subprocesos";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_porcentajeusocpu";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_porcentajeusocpu";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_porcentajeusocpu";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_porcentajeusocpu";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_promediolecuradisco";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promediolecuradisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_promediolecuradisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promediolecuradisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_promedioescrituradisco";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promedioescrituradisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_promedioescrituradisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promedioescrituradisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_fechaprosesamiento";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_fechaprosesamiento";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_fechaprosesamiento";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_fechaprosesamiento";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_horaprocesamiento";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_horaprocesamiento";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_horaprocesamiento";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Time;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_horaprocesamiento";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_espacioendisco";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_espacioendisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_espacioendisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_espacioendisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_tamaniodisco";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_tamaniodisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_tamaniodisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_tamaniodisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `ocr_estadisticas` (`ocr_est_nume_radi`, `ocr_est_batch_ocr`, `ocr_est_memoriatotal`, `ocr_est_memoriacache`, `ocr_est_memoriadisponible`, `ocr_est_memorialibre`, `ocr_est_memkernelpaginado`, `ocr_est_memkernelnopaginado`, `ocr_est_identificadores`, `ocr_est_subprocesos`, `ocr_est_porcentajeusocpu`, `ocr_est_promediolecuradisco`, `ocr_est_promedioescrituradisco`, `ocr_est_fechaprosesamiento`, `ocr_est_horaprocesamiento`, `ocr_est_espacioendisco`, `ocr_est_tamaniodisco`) VALUES (@ocr_est_nume_radi, @ocr_est_batch_ocr, @ocr_est_memoriatotal, @ocr_est_memoriacache, @ocr_est_memoriadisponible, @ocr_est_memorialibre, @ocr_est_memkernelpaginado, @ocr_est_memkernelnopaginado, @ocr_est_identificadores, @ocr_est_subprocesos, @ocr_est_porcentajeusocpu, @ocr_est_promediolecuradisco, @ocr_est_promedioescrituradisco, @ocr_est_fechaprosesamiento, @ocr_est_horaprocesamiento, @ocr_est_espacioendisco, @ocr_est_tamaniodisco)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_nume_radi";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_nume_radi";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_batch_ocr";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_batch_ocr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memoriatotal";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriatotal";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memoriacache";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriacache";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memoriadisponible";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriadisponible";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memorialibre";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memorialibre";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memkernelpaginado";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelpaginado";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memkernelnopaginado";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelnopaginado";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_identificadores";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_identificadores";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_subprocesos";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_subprocesos";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_porcentajeusocpu";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_porcentajeusocpu";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_promediolecuradisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promediolecuradisco";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_promedioescrituradisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promedioescrituradisco";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_fechaprosesamiento";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_fechaprosesamiento";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_horaprocesamiento";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Time;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_horaprocesamiento";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_espacioendisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_espacioendisco";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_tamaniodisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_tamaniodisco";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `ocr_estadisticas` SET `ocr_est_nume_radi` = @ocr_est_nume_radi, `ocr_est_" +
                "batch_ocr` = @ocr_est_batch_ocr, `ocr_est_memoriatotal` = @ocr_est_memoriatotal," +
                " `ocr_est_memoriacache` = @ocr_est_memoriacache, `ocr_est_memoriadisponible` = @" +
                "ocr_est_memoriadisponible, `ocr_est_memorialibre` = @ocr_est_memorialibre, `ocr_" +
                "est_memkernelpaginado` = @ocr_est_memkernelpaginado, `ocr_est_memkernelnopaginad" +
                "o` = @ocr_est_memkernelnopaginado, `ocr_est_identificadores` = @ocr_est_identifi" +
                "cadores, `ocr_est_subprocesos` = @ocr_est_subprocesos, `ocr_est_porcentajeusocpu" +
                "` = @ocr_est_porcentajeusocpu, `ocr_est_promediolecuradisco` = @ocr_est_promedio" +
                "lecuradisco, `ocr_est_promedioescrituradisco` = @ocr_est_promedioescrituradisco," +
                " `ocr_est_fechaprosesamiento` = @ocr_est_fechaprosesamiento, `ocr_est_horaproces" +
                "amiento` = @ocr_est_horaprocesamiento, `ocr_est_espacioendisco` = @ocr_est_espac" +
                "ioendisco, `ocr_est_tamaniodisco` = @ocr_est_tamaniodisco WHERE ((`ocr_est_id` =" +
                " @Original_ocr_est_id) AND ((@IsNull_ocr_est_nume_radi = 1 AND `ocr_est_nume_rad" +
                "i` IS NULL) OR (`ocr_est_nume_radi` = @Original_ocr_est_nume_radi)) AND ((@IsNul" +
                "l_ocr_est_batch_ocr = 1 AND `ocr_est_batch_ocr` IS NULL) OR (`ocr_est_batch_ocr`" +
                " = @Original_ocr_est_batch_ocr)) AND ((@IsNull_ocr_est_memoriatotal = 1 AND `ocr" +
                "_est_memoriatotal` IS NULL) OR (`ocr_est_memoriatotal` = @Original_ocr_est_memor" +
                "iatotal)) AND ((@IsNull_ocr_est_memoriacache = 1 AND `ocr_est_memoriacache` IS N" +
                "ULL) OR (`ocr_est_memoriacache` = @Original_ocr_est_memoriacache)) AND ((@IsNull" +
                "_ocr_est_memoriadisponible = 1 AND `ocr_est_memoriadisponible` IS NULL) OR (`ocr" +
                "_est_memoriadisponible` = @Original_ocr_est_memoriadisponible)) AND ((@IsNull_oc" +
                "r_est_memorialibre = 1 AND `ocr_est_memorialibre` IS NULL) OR (`ocr_est_memorial" +
                "ibre` = @Original_ocr_est_memorialibre)) AND ((@IsNull_ocr_est_memkernelpaginado" +
                " = 1 AND `ocr_est_memkernelpaginado` IS NULL) OR (`ocr_est_memkernelpaginado` = " +
                "@Original_ocr_est_memkernelpaginado)) AND ((@IsNull_ocr_est_memkernelnopaginado " +
                "= 1 AND `ocr_est_memkernelnopaginado` IS NULL) OR (`ocr_est_memkernelnopaginado`" +
                " = @Original_ocr_est_memkernelnopaginado)) AND ((@IsNull_ocr_est_identificadores" +
                " = 1 AND `ocr_est_identificadores` IS NULL) OR (`ocr_est_identificadores` = @Ori" +
                "ginal_ocr_est_identificadores)) AND ((@IsNull_ocr_est_subprocesos = 1 AND `ocr_e" +
                "st_subprocesos` IS NULL) OR (`ocr_est_subprocesos` = @Original_ocr_est_subproces" +
                "os)) AND ((@IsNull_ocr_est_porcentajeusocpu = 1 AND `ocr_est_porcentajeusocpu` I" +
                "S NULL) OR (`ocr_est_porcentajeusocpu` = @Original_ocr_est_porcentajeusocpu)) AN" +
                "D ((@IsNull_ocr_est_promediolecuradisco = 1 AND `ocr_est_promediolecuradisco` IS" +
                " NULL) OR (`ocr_est_promediolecuradisco` = @Original_ocr_est_promediolecuradisco" +
                ")) AND ((@IsNull_ocr_est_promedioescrituradisco = 1 AND `ocr_est_promedioescritu" +
                "radisco` IS NULL) OR (`ocr_est_promedioescrituradisco` = @Original_ocr_est_prome" +
                "dioescrituradisco)) AND ((@IsNull_ocr_est_fechaprosesamiento = 1 AND `ocr_est_fe" +
                "chaprosesamiento` IS NULL) OR (`ocr_est_fechaprosesamiento` = @Original_ocr_est_" +
                "fechaprosesamiento)) AND ((@IsNull_ocr_est_horaprocesamiento = 1 AND `ocr_est_ho" +
                "raprocesamiento` IS NULL) OR (`ocr_est_horaprocesamiento` = @Original_ocr_est_ho" +
                "raprocesamiento)) AND ((@IsNull_ocr_est_espacioendisco = 1 AND `ocr_est_espacioe" +
                "ndisco` IS NULL) OR (`ocr_est_espacioendisco` = @Original_ocr_est_espacioendisco" +
                ")) AND ((@IsNull_ocr_est_tamaniodisco = 1 AND `ocr_est_tamaniodisco` IS NULL) OR" +
                " (`ocr_est_tamaniodisco` = @Original_ocr_est_tamaniodisco)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_nume_radi";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_nume_radi";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_batch_ocr";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_batch_ocr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memoriatotal";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriatotal";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memoriacache";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriacache";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memoriadisponible";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriadisponible";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memorialibre";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memorialibre";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memkernelpaginado";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelpaginado";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memkernelnopaginado";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelnopaginado";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_identificadores";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_identificadores";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_subprocesos";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_subprocesos";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_porcentajeusocpu";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_porcentajeusocpu";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_promediolecuradisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promediolecuradisco";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_promedioescrituradisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promedioescrituradisco";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_fechaprosesamiento";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_fechaprosesamiento";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_horaprocesamiento";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Time;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_horaprocesamiento";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_espacioendisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_espacioendisco";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_tamaniodisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_tamaniodisco";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_nume_radi";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_nume_radi";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_nume_radi";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_nume_radi";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_batch_ocr";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_batch_ocr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_batch_ocr";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_batch_ocr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memoriatotal";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriatotal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memoriatotal";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriatotal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memoriacache";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriacache";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memoriacache";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriacache";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memoriadisponible";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriadisponible";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memoriadisponible";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriadisponible";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memorialibre";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memorialibre";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memorialibre";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memorialibre";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memkernelpaginado";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelpaginado";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memkernelpaginado";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelpaginado";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_memkernelnopaginado";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelnopaginado";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_memkernelnopaginado";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelnopaginado";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_identificadores";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_identificadores";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_identificadores";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_identificadores";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_subprocesos";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_subprocesos";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_subprocesos";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_subprocesos";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_porcentajeusocpu";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_porcentajeusocpu";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_porcentajeusocpu";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_porcentajeusocpu";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_promediolecuradisco";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promediolecuradisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_promediolecuradisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promediolecuradisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_promedioescrituradisco";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promedioescrituradisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_promedioescrituradisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promedioescrituradisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_fechaprosesamiento";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_fechaprosesamiento";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_fechaprosesamiento";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_fechaprosesamiento";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_horaprocesamiento";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_horaprocesamiento";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_horaprocesamiento";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Time;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_horaprocesamiento";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_espacioendisco";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_espacioendisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_espacioendisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_espacioendisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ocr_est_tamaniodisco";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_tamaniodisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ocr_est_tamaniodisco";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_tamaniodisco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::OCR.Facultad.Ingenieria.ManagerBases.Properties.Settings.Default.ocrConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[2];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `ocr_est_id`, `ocr_est_nume_radi`, `ocr_est_batch_ocr`, `ocr_est_memoriatotal`, `ocr_est_memoriacache`, `ocr_est_memoriadisponible`, `ocr_est_memorialibre`, `ocr_est_memkernelpaginado`, `ocr_est_memkernelnopaginado`, `ocr_est_identificadores`, `ocr_est_subprocesos`, `ocr_est_porcentajeusocpu`, `ocr_est_promediolecuradisco`, `ocr_est_promedioescrituradisco`, `ocr_est_fechaprosesamiento`, `ocr_est_horaprocesamiento`, `ocr_est_espacioendisco`, `ocr_est_tamaniodisco` FROM `ocr_estadisticas`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"INSERT INTO `ocr_estadisticas` (`ocr_est_nume_radi`, `ocr_est_batch_ocr`, `ocr_est_memoriatotal`, `ocr_est_memoriacache`, `ocr_est_memoriadisponible`, `ocr_est_memorialibre`, `ocr_est_memkernelpaginado`, `ocr_est_memkernelnopaginado`, `ocr_est_identificadores`, `ocr_est_subprocesos`, `ocr_est_porcentajeusocpu`, `ocr_est_promediolecuradisco`, `ocr_est_promedioescrituradisco`, `ocr_est_fechaprosesamiento`, `ocr_est_horaprocesamiento`, `ocr_est_espacioendisco`, `ocr_est_tamaniodisco`) VALUES (@ocr_est_nume_radi, @ocr_est_batch_ocr, @ocr_est_memoriatotal, @ocr_est_memoriacache, @ocr_est_memoriadisponible, @ocr_est_memorialibre, @ocr_est_memkernelpaginado, @ocr_est_memkernelnopaginado, @ocr_est_identificadores, @ocr_est_subprocesos, @ocr_est_porcentajeusocpu, @ocr_est_promediolecuradisco, @ocr_est_promedioescrituradisco, @ocr_est_fechaprosesamiento, @ocr_est_horaprocesamiento, @ocr_est_espacioendisco, @ocr_est_tamaniodisco)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_nume_radi";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_nume_radi";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_batch_ocr";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_batch_ocr";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memoriatotal";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriatotal";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memoriacache";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriacache";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memoriadisponible";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memoriadisponible";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memorialibre";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memorialibre";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memkernelpaginado";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelpaginado";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_memkernelnopaginado";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_memkernelnopaginado";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_identificadores";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_identificadores";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_subprocesos";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_subprocesos";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_porcentajeusocpu";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_porcentajeusocpu";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_promediolecuradisco";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promediolecuradisco";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_promedioescrituradisco";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_promedioescrituradisco";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_fechaprosesamiento";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_fechaprosesamiento";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_horaprocesamiento";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Time;
            param.Size = 1024;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_horaprocesamiento";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_espacioendisco";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_espacioendisco";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ocr_est_tamaniodisco";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "ocr_est_tamaniodisco";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetOcr_Estadisticas.ocr_estadisticasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetOcr_Estadisticas.ocr_estadisticasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetOcr_Estadisticas.ocr_estadisticasDataTable dataTable = new DataSetOcr_Estadisticas.ocr_estadisticasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetOcr_Estadisticas.ocr_estadisticasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetOcr_Estadisticas dataSet) {
            return this.Adapter.Update(dataSet, "ocr_estadisticas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ocr_est_id, 
                    global::System.Nullable<int> Original_ocr_est_nume_radi, 
                    global::System.Nullable<int> Original_ocr_est_batch_ocr, 
                    global::System.Nullable<float> Original_ocr_est_memoriatotal, 
                    global::System.Nullable<float> Original_ocr_est_memoriacache, 
                    global::System.Nullable<float> Original_ocr_est_memoriadisponible, 
                    global::System.Nullable<float> Original_ocr_est_memorialibre, 
                    global::System.Nullable<float> Original_ocr_est_memkernelpaginado, 
                    global::System.Nullable<float> Original_ocr_est_memkernelnopaginado, 
                    global::System.Nullable<float> Original_ocr_est_identificadores, 
                    global::System.Nullable<float> Original_ocr_est_subprocesos, 
                    global::System.Nullable<float> Original_ocr_est_porcentajeusocpu, 
                    global::System.Nullable<float> Original_ocr_est_promediolecuradisco, 
                    global::System.Nullable<float> Original_ocr_est_promedioescrituradisco, 
                    global::System.Nullable<global::System.DateTime> Original_ocr_est_fechaprosesamiento, 
                    global::System.Nullable<global::System.DateTime> Original_ocr_est_horaprocesamiento, 
                    global::System.Nullable<float> Original_ocr_est_espacioendisco, 
                    global::System.Nullable<float> Original_ocr_est_tamaniodisco) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ocr_est_id));
            if ((Original_ocr_est_nume_radi.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ocr_est_nume_radi.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_batch_ocr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ocr_est_batch_ocr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memoriatotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((float)(Original_ocr_est_memoriatotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memoriacache.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((float)(Original_ocr_est_memoriacache.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memoriadisponible.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((float)(Original_ocr_est_memoriadisponible.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memorialibre.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((float)(Original_ocr_est_memorialibre.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memkernelpaginado.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((float)(Original_ocr_est_memkernelpaginado.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memkernelnopaginado.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((float)(Original_ocr_est_memkernelnopaginado.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_identificadores.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((float)(Original_ocr_est_identificadores.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_subprocesos.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((float)(Original_ocr_est_subprocesos.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_porcentajeusocpu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((float)(Original_ocr_est_porcentajeusocpu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_promediolecuradisco.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((float)(Original_ocr_est_promediolecuradisco.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_promedioescrituradisco.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((float)(Original_ocr_est_promedioescrituradisco.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_fechaprosesamiento.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_ocr_est_fechaprosesamiento.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_horaprocesamiento.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_ocr_est_horaprocesamiento.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_espacioendisco.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((float)(Original_ocr_est_espacioendisco.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_tamaniodisco.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((float)(Original_ocr_est_tamaniodisco.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> ocr_est_nume_radi, 
                    global::System.Nullable<int> ocr_est_batch_ocr, 
                    global::System.Nullable<float> ocr_est_memoriatotal, 
                    global::System.Nullable<float> ocr_est_memoriacache, 
                    global::System.Nullable<float> ocr_est_memoriadisponible, 
                    global::System.Nullable<float> ocr_est_memorialibre, 
                    global::System.Nullable<float> ocr_est_memkernelpaginado, 
                    global::System.Nullable<float> ocr_est_memkernelnopaginado, 
                    global::System.Nullable<float> ocr_est_identificadores, 
                    global::System.Nullable<float> ocr_est_subprocesos, 
                    global::System.Nullable<float> ocr_est_porcentajeusocpu, 
                    global::System.Nullable<float> ocr_est_promediolecuradisco, 
                    global::System.Nullable<float> ocr_est_promedioescrituradisco, 
                    global::System.Nullable<global::System.DateTime> ocr_est_fechaprosesamiento, 
                    global::System.Nullable<global::System.DateTime> ocr_est_horaprocesamiento, 
                    global::System.Nullable<float> ocr_est_espacioendisco, 
                    global::System.Nullable<float> ocr_est_tamaniodisco) {
            if ((ocr_est_nume_radi.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ocr_est_nume_radi.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_batch_ocr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ocr_est_batch_ocr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memoriatotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((float)(ocr_est_memoriatotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memoriacache.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((float)(ocr_est_memoriacache.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memoriadisponible.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((float)(ocr_est_memoriadisponible.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memorialibre.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((float)(ocr_est_memorialibre.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memkernelpaginado.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((float)(ocr_est_memkernelpaginado.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memkernelnopaginado.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((float)(ocr_est_memkernelnopaginado.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_identificadores.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((float)(ocr_est_identificadores.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_subprocesos.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((float)(ocr_est_subprocesos.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_porcentajeusocpu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((float)(ocr_est_porcentajeusocpu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_promediolecuradisco.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((float)(ocr_est_promediolecuradisco.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_promedioescrituradisco.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((float)(ocr_est_promedioescrituradisco.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_fechaprosesamiento.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(ocr_est_fechaprosesamiento.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_horaprocesamiento.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(ocr_est_horaprocesamiento.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_espacioendisco.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((float)(ocr_est_espacioendisco.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_tamaniodisco.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((float)(ocr_est_tamaniodisco.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ocr_est_nume_radi, 
                    global::System.Nullable<int> ocr_est_batch_ocr, 
                    global::System.Nullable<float> ocr_est_memoriatotal, 
                    global::System.Nullable<float> ocr_est_memoriacache, 
                    global::System.Nullable<float> ocr_est_memoriadisponible, 
                    global::System.Nullable<float> ocr_est_memorialibre, 
                    global::System.Nullable<float> ocr_est_memkernelpaginado, 
                    global::System.Nullable<float> ocr_est_memkernelnopaginado, 
                    global::System.Nullable<float> ocr_est_identificadores, 
                    global::System.Nullable<float> ocr_est_subprocesos, 
                    global::System.Nullable<float> ocr_est_porcentajeusocpu, 
                    global::System.Nullable<float> ocr_est_promediolecuradisco, 
                    global::System.Nullable<float> ocr_est_promedioescrituradisco, 
                    global::System.Nullable<global::System.DateTime> ocr_est_fechaprosesamiento, 
                    global::System.Nullable<global::System.DateTime> ocr_est_horaprocesamiento, 
                    global::System.Nullable<float> ocr_est_espacioendisco, 
                    global::System.Nullable<float> ocr_est_tamaniodisco, 
                    int Original_ocr_est_id, 
                    global::System.Nullable<int> Original_ocr_est_nume_radi, 
                    global::System.Nullable<int> Original_ocr_est_batch_ocr, 
                    global::System.Nullable<float> Original_ocr_est_memoriatotal, 
                    global::System.Nullable<float> Original_ocr_est_memoriacache, 
                    global::System.Nullable<float> Original_ocr_est_memoriadisponible, 
                    global::System.Nullable<float> Original_ocr_est_memorialibre, 
                    global::System.Nullable<float> Original_ocr_est_memkernelpaginado, 
                    global::System.Nullable<float> Original_ocr_est_memkernelnopaginado, 
                    global::System.Nullable<float> Original_ocr_est_identificadores, 
                    global::System.Nullable<float> Original_ocr_est_subprocesos, 
                    global::System.Nullable<float> Original_ocr_est_porcentajeusocpu, 
                    global::System.Nullable<float> Original_ocr_est_promediolecuradisco, 
                    global::System.Nullable<float> Original_ocr_est_promedioescrituradisco, 
                    global::System.Nullable<global::System.DateTime> Original_ocr_est_fechaprosesamiento, 
                    global::System.Nullable<global::System.DateTime> Original_ocr_est_horaprocesamiento, 
                    global::System.Nullable<float> Original_ocr_est_espacioendisco, 
                    global::System.Nullable<float> Original_ocr_est_tamaniodisco) {
            if ((ocr_est_nume_radi.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ocr_est_nume_radi.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_batch_ocr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ocr_est_batch_ocr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memoriatotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((float)(ocr_est_memoriatotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memoriacache.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((float)(ocr_est_memoriacache.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memoriadisponible.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(ocr_est_memoriadisponible.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memorialibre.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((float)(ocr_est_memorialibre.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memkernelpaginado.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((float)(ocr_est_memkernelpaginado.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memkernelnopaginado.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((float)(ocr_est_memkernelnopaginado.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_identificadores.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((float)(ocr_est_identificadores.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_subprocesos.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((float)(ocr_est_subprocesos.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_porcentajeusocpu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((float)(ocr_est_porcentajeusocpu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_promediolecuradisco.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(ocr_est_promediolecuradisco.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_promedioescrituradisco.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((float)(ocr_est_promedioescrituradisco.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_fechaprosesamiento.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(ocr_est_fechaprosesamiento.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_horaprocesamiento.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(ocr_est_horaprocesamiento.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_espacioendisco.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((float)(ocr_est_espacioendisco.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_tamaniodisco.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((float)(ocr_est_tamaniodisco.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_ocr_est_id));
            if ((Original_ocr_est_nume_radi.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ocr_est_nume_radi.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_batch_ocr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_ocr_est_batch_ocr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memoriatotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((float)(Original_ocr_est_memoriatotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memoriacache.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((float)(Original_ocr_est_memoriacache.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memoriadisponible.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((float)(Original_ocr_est_memoriadisponible.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memorialibre.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((float)(Original_ocr_est_memorialibre.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memkernelpaginado.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((float)(Original_ocr_est_memkernelpaginado.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_memkernelnopaginado.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((float)(Original_ocr_est_memkernelnopaginado.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_identificadores.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((float)(Original_ocr_est_identificadores.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_subprocesos.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((float)(Original_ocr_est_subprocesos.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_porcentajeusocpu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((float)(Original_ocr_est_porcentajeusocpu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_promediolecuradisco.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((float)(Original_ocr_est_promediolecuradisco.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_promedioescrituradisco.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((float)(Original_ocr_est_promedioescrituradisco.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_fechaprosesamiento.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(Original_ocr_est_fechaprosesamiento.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_horaprocesamiento.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(Original_ocr_est_horaprocesamiento.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_espacioendisco.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((float)(Original_ocr_est_espacioendisco.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_ocr_est_tamaniodisco.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((float)(Original_ocr_est_tamaniodisco.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertOcr_Estadisticas(
                    global::System.Nullable<int> ocr_est_nume_radi, 
                    global::System.Nullable<int> ocr_est_batch_ocr, 
                    global::System.Nullable<decimal> ocr_est_memoriatotal, 
                    global::System.Nullable<decimal> ocr_est_memoriacache, 
                    global::System.Nullable<decimal> ocr_est_memoriadisponible, 
                    global::System.Nullable<decimal> ocr_est_memorialibre, 
                    global::System.Nullable<decimal> ocr_est_memkernelpaginado, 
                    global::System.Nullable<decimal> ocr_est_memkernelnopaginado, 
                    global::System.Nullable<decimal> ocr_est_identificadores, 
                    global::System.Nullable<decimal> ocr_est_subprocesos, 
                    global::System.Nullable<decimal> ocr_est_porcentajeusocpu, 
                    global::System.Nullable<decimal> ocr_est_promediolecuradisco, 
                    global::System.Nullable<decimal> ocr_est_promedioescrituradisco, 
                    global::System.Nullable<global::System.DateTime> ocr_est_fechaprosesamiento, 
                    object ocr_est_horaprocesamiento, 
                    global::System.Nullable<decimal> ocr_est_espacioendisco, 
                    global::System.Nullable<decimal> ocr_est_tamaniodisco) {
            global::MySql.Data.MySqlClient.MySqlCommand command = this.CommandCollection[1];
            if ((ocr_est_nume_radi.HasValue == true)) {
                command.Parameters[0].Value = ((int)(ocr_est_nume_radi.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_batch_ocr.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ocr_est_batch_ocr.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memoriatotal.HasValue == true)) {
                command.Parameters[2].Value = ((decimal)(ocr_est_memoriatotal.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memoriacache.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(ocr_est_memoriacache.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memoriadisponible.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(ocr_est_memoriadisponible.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memorialibre.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(ocr_est_memorialibre.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memkernelpaginado.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(ocr_est_memkernelpaginado.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_memkernelnopaginado.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(ocr_est_memkernelnopaginado.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_identificadores.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(ocr_est_identificadores.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_subprocesos.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(ocr_est_subprocesos.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_porcentajeusocpu.HasValue == true)) {
                command.Parameters[10].Value = ((decimal)(ocr_est_porcentajeusocpu.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_promediolecuradisco.HasValue == true)) {
                command.Parameters[11].Value = ((decimal)(ocr_est_promediolecuradisco.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_promedioescrituradisco.HasValue == true)) {
                command.Parameters[12].Value = ((decimal)(ocr_est_promedioescrituradisco.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_fechaprosesamiento.HasValue == true)) {
                command.Parameters[13].Value = ((System.DateTime)(ocr_est_fechaprosesamiento.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_horaprocesamiento == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((object)(ocr_est_horaprocesamiento));
            }
            if ((ocr_est_espacioendisco.HasValue == true)) {
                command.Parameters[15].Value = ((decimal)(ocr_est_espacioendisco.Value));
            }
            else {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ocr_est_tamaniodisco.HasValue == true)) {
                command.Parameters[16].Value = ((decimal)(ocr_est_tamaniodisco.Value));
            }
            else {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ocr_estadisticasTableAdapter _ocr_estadisticasTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ocr_estadisticasTableAdapter ocr_estadisticasTableAdapter {
            get {
                return this._ocr_estadisticasTableAdapter;
            }
            set {
                this._ocr_estadisticasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._ocr_estadisticasTableAdapter != null) 
                            && (this._ocr_estadisticasTableAdapter.Connection != null))) {
                    return this._ocr_estadisticasTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._ocr_estadisticasTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DataSetOcr_Estadisticas dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._ocr_estadisticasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ocr_estadisticas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ocr_estadisticasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DataSetOcr_Estadisticas dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._ocr_estadisticasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ocr_estadisticas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ocr_estadisticasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DataSetOcr_Estadisticas dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._ocr_estadisticasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ocr_estadisticas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ocr_estadisticasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DataSetOcr_Estadisticas dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._ocr_estadisticasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ocr_estadisticasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" +
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" +
                        "n las transacciones o el estado actual no permite que comience la transacción.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._ocr_estadisticasTableAdapter != null)) {
                    revertConnections.Add(this._ocr_estadisticasTableAdapter, this._ocr_estadisticasTableAdapter.Connection);
                    this._ocr_estadisticasTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._ocr_estadisticasTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._ocr_estadisticasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ocr_estadisticasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ocr_estadisticasTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._ocr_estadisticasTableAdapter != null)) {
                    this._ocr_estadisticasTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._ocr_estadisticasTableAdapter]));
                    this._ocr_estadisticasTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591